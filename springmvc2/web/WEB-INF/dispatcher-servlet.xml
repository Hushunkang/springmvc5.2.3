<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描包，加载注解 -->
    <context:component-scan base-package="com.atguigu.springmvc.crud"></context:component-scan>

    <!-- 配置视图解析器InternalResourceViewResolver，即如何把控制器中/处理器中的业务方法的返回值解析为实际的物理视图 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--
		default-servlet-handler将在spring mvc上下文中定义一个DefaultServletHttpRequestHandler
		它会对进入DispatcherServlet的请求进行筛查，如果发现是没有经过请求映射的请求，就将该请求交由web server默认的Servlet处理
		如果不是静态资源的请求，才由DispatcherServlet继续处理
		一般web server默认的Servlet名称都是default
		若所使用的web server默认的Servlet的servlet名称不是default，则需要通过default-servlet-name属性来显式的指定一哈
	-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!-- 配置视图解析器BeanNameViewResolver，它是使用视图的名字来解析视图滴 -->
    <!-- 通过order属性来定义视图解析器的优先级，order值越小优先级越高 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="100"></property>
    </bean>

    <!-- 如果配置了mvc:view-controller标签，@RequestMapping会不起作用，解决办法就是添加mvc:annotation-driven标签 -->
    <!-- 在实际项目开发中，通常都需配置mvc:annotation-driven标签 -->
    <mvc:annotation-driven></mvc:annotation-driven>

</beans>